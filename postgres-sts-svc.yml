---
apiVersion: v1
kind: Service
metadata:
  name: db
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: docker-voting
    app.kubernetes.io/version: "1.0.0"
spec:
  ports:
  - port: 5432
  selector:
    app: docker-voting
    run: postgres
    tier: backend
    env: production
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: docker-voting
    app.kubernetes.io/version: "1.0.0"
spec:
  selector:
    matchLabels:
      app: docker-voting
      run: postgres
      tier: backend
      env: production
  serviceName: db
  volumeClaimTemplates:
  - metadata:
      name: pg-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
        limits:
          storage: 10Gi
  template:
    metadata:
      labels:
        app: docker-voting
        run: postgres
        tier: backend
        env: production
    spec:
      containers:
      - image: postgres:9.6
        name: postgres-ctr
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: pg-config
              key: pg-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pg-config
              key: pg-pass
        resources:
          requests:
            memory: 15Mi
            cpu: 50m
          limits:
            memory: 250Mi
            cpu: 250m
        volumeMounts:
        - name: pg-data
          mountPath: /var/lib/postgresql/
        livenessProbe:
          exec:
            command:
            - pg_isready
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
...